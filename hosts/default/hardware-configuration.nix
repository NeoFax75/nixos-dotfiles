# Do not modify this file!  It was generated by ‘nixos-generate-config’
# and may be overwritten by future invocations.  Please make changes
# to /etc/nixos/configuration.nix instead.
{ config, lib, pkgs, modulesPath, ... }:

{
  imports = [ ];

  boot.initrd.availableKernelModules = [ "xhci_pci" "ata_piix" "ahci" "sd_mod" "sr_mod" ];
  boot.initrd.kernelModules = [ ];
  boot.kernelModules = [ ];
  boot.extraModulePackages = [ ];
  boot.kernel.sysctl = { "vm.swappiness" = 10;};

  fileSystems."/" =
    { 
      # device = "/dev/disk/by-uuid/aa9981bc-0ee1-459b-934f-bb498ffaa282";
      device = "/dev/disk/by-label/NIXOS";
      fsType = "btrfs";
      options = [ "subvol=@" ];
    };

  fileSystems."/home" =
    { 
      # device = "/dev/disk/by-uuid/aa9981bc-0ee1-459b-934f-bb498ffaa282";
      device = "/dev/disk/by-label/NIXOS";
      fsType = "btrfs";
      options = [ "subvol=@home" ];
    };

  fileSystems."/nix" =
    { 
      # device = "/dev/disk/by-uuid/aa9981bc-0ee1-459b-934f-bb498ffaa282";
      device = "/dev/disk/by-label/NIXOS";
      fsType = "btrfs";
      options = [ "subvol=@nix" ];
    };

  fileSystems."/var/log" =
    { 
      # device = "/dev/disk/by-uuid/aa9981bc-0ee1-459b-934f-bb498ffaa282";
      device = "/dev/disk/by-label/NIXOS";
      fsType = "btrfs";
      options = [ "subvol=@log" ];
    };

  fileSystems."/boot" =
    { 
      # device = "/dev/disk/by-uuid/A348-65A1";
      device = "/dev/disk/by-label/UEFI";
      fsType = "vfat";
      options = [ "fmask=0022" "dmask=0022" ];
    };

  swapDevices =
    [ 
      { 
        # device = "/dev/disk/by-uuid/4fb803fe-616a-4136-bb03-2d35b429a7a0"; 
        device = "/dev/disk/by-label/SWAP";
      }
    ];

  # Enables DHCP on each ethernet and wireless interface. In case of scripted networking
  # (the default) this is the recommended approach. When using systemd-networkd it's
  # still possible to use this option, but it's recommended to use it in conjunction
  # with explicit per-interface declarations with `networking.interfaces.<interface>.useDHCP`.
  networking.useDHCP = lib.mkDefault true;
  # networking.interfaces.enp0s3.useDHCP = lib.mkDefault true;

  nixpkgs.hostPlatform = lib.mkDefault "x86_64-linux";
  virtualisation.virtualbox.guest.enable = true;
}
